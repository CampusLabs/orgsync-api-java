buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'me.champeau.gradle:jbake-gradle-plugin:0.2'
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
        classpath 'org.ajoberstar:gradle-git:0.4.0'
        classpath 'org.pegdown:pegdown:1.4.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'fatjar'
apply plugin: 'github-pages'
apply plugin: 'me.champeau.jbake'
apply from: 'gradle/site.gradle'

group = 'com.orgsync'
version = '0.0.1'

description = 'Java client for the OrgSync API'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

sourceSets {
    examples {
        compileClasspath += sourceSets.main.runtimeClasspath
    }

    integration {
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    compile group: 'com.ning', name: 'async-http-client', version: '1.7.17'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.5'

    examplesCompile configurations.runtime
    examplesRuntime group: 'ch.qos.logback', name: 'logback-core', version: '1.0.13'
    examplesRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'

    integrationCompile group: 'com.typesafe', name: 'config', version: '1.0.1'
	integrationCompile configurations.testCompile
	integrationRuntime configurations.testRuntime
}

javadoc {
    options.links = [
        'http://sonatype.github.io/async-http-client/apidocs/reference/',
        'http://download.oracle.com/javase/6/docs/api/'
    ]
}

task simpleRequests(dependsOn: 'classes', type: JavaExec) {
    main = 'com.orgsync.api.examples.SimpleRequest'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.examples.runtimeClasspath
}

task addAccounts(dependsOn: 'classes', type: JavaExec) {
    main = 'com.orgsync.api.examples.AddAccountsRequest'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.examples.runtimeClasspath
}

task integrationTest(type: Test) {
    outputs.upToDateWhen { false }
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.main.runtimeClasspath + sourceSets.integration.runtimeClasspath
}

task generateDbTemplate(dependsOn: 'classes', type: JavaExec) {
    main = 'com.orgsync.api.integration.DbTemplate'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.integration.runtimeClasspath
}

eclipse {
    classpath {
        plusConfigurations += configurations.examplesRuntime
        plusConfigurations += configurations.integrationRuntime
    }
}

githubPages {
  repoUri = 'https://github.com/orgsync/orgsync-api-java.git'

  pages {
    from(javadoc.outputs.files) {
      into 'docs/javadoc'
    }
  }
}

idea {
    module {
        scopes.COMPILE.plus += configurations.integrationCompile
    }
}

task makeDist(dependsOn: ['clean', 'javadoc'], type: Zip) {
    from("README.md")
    from("LICENSE")
    from jar.outputs.files
    into("javadoc/") {
        from javadoc.destinationDir
    }
    into("examples/") {
        from("src/examples/java")
    }
    into("docs/") {
        from("docs/")
    }
}

